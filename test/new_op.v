/* Generated by Yosys 0.8+     147 (git sha1 7ce9d2c, clang 8.0.0 -fPIC -Os) */

(* top =  1  *)
(* src = "test.v:1" *)
module Op(clk, rst, a, b, c, mode, d);
  (* src = "test.v:7" *)
  wire [31:0] _0_;
  (* src = "test.v:7" *)
  wire [31:0] _1_;
  wire [10:0] _2_;
  (* src = "test.v:3" *)
  input [31:0] a;
  (* src = "test.v:4" *)
  input [31:0] b;
  (* src = "test.v:5" *)
  output [31:0] c;
  (* src = "test.v:2" *)
  input clk;
  (* src = "test.v:6" *)
  output [31:0] d;
  (* src = "test.v:2" *)
  input mode;
  (* src = "test.v:2" *)
  input rst;
  assign _2_ = a[10:0] & (* src = "test.v:8" *) b[10:0];
  reg [0:0] \c_reg[0] ;
  always @(posedge clk)
      \c_reg[0]  <= _0_[0];
  assign c[0] = \c_reg[0] ;
  assign _0_[31:11] = mode ? (* src = "test.v:8" *) { a[10:0], b[31:22] } : c[31:11];
  assign _0_[10:0] = mode ? (* src = "test.v:8" *) b[21:11] : _2_;
endmodule
